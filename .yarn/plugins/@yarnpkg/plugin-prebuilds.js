module.exports={name:"@yarnpkg/plugin-prebuilds",factory:function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(t,r){t.exports=e("@yarnpkg/core")},function(t,r){t.exports=e("@yarnpkg/fslib")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),i=r(3),o=r(4),a=r(10),s={prebuildRuntime:{description:"The runtime used, either 'electron' or 'node'",type:n.SettingsType.STRING,default:null},prebuildAbi:{description:"The ABI of the runtime used.",type:n.SettingsType.STRING,default:null},prebuildTagPrefix:{description:"The prebuild tag prefix",type:n.SettingsType.STRING,default:"v"},prebuildHostMirrorUrl:{description:"The prebuild host mirror URL",type:n.SettingsType.STRING,default:null},prebuildHostMirrorTemplate:{description:"The prebuild host mirror template",type:n.SettingsType.STRING,default:"{mirror_url}/{tag_prefix}{version}/{name}-v{version}-{runtime}-v{abi}-{platform}{libc}-{arch}.tar.gz"}},l={hooks:{reduceDependency:i.reduceDependency},fetchers:[o.PrebuildFetcher],resolvers:[a.PrebuildResolver],configuration:{...s,prebuildScopes:{description:"Prebuild settings per package scope",type:n.SettingsType.MAP,valueDefinition:{description:"",type:n.SettingsType.SHAPE,properties:{...s}}}}};t.default=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reduceDependency=void 0;const n=r(0);t.reduceDependency=async(e,t,r)=>{if("fsevents"===r.name&&"darwin"!==process.platform)return e;if("bindings"===e.name&&null===e.scope){const t=`builtin<prebuild/${n.structUtils.stringifyIdent(r)}>`;return n.structUtils.makeDescriptor(e,n.structUtils.makeRange({protocol:"prebuild:",source:`bindings<${n.structUtils.slugifyIdent(r)}>${process.platform}-${process.arch}`,selector:t,params:null}))}return e}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.PrebuildFetcher=void 0;const a=r(0),s=r(1),l=r(5),u=o(r(6));t.PrebuildFetcher=class{supports(e,t){return!!e.reference.startsWith("prebuild:")}getLocalPath(e,t){return null}async fetch(e,t){const r=new s.NodeFS,n=await this.fetchPrebuild(e,t),i=n.getRealPath();n.saveAndClose(),await s.xfs.chmodPromise(i,420);const o=`${t.cache.cacheKey}/${await a.hashUtils.checksumFile(i)}`,u=t.cache.getLocatorPath(e,o);if(!u)throw new Error("Assertion failed: Expected the cache path to be available");await s.xfs.movePromise(i,u),await s.xfs.mkdirpPromise(s.ppath.dirname(u));let c=null;const d=await l.getLibzipPromise();return{packageFs:new s.LazyFS(()=>a.miscUtils.prettifySyncErrors(()=>c=new s.ZipFS(u,{baseFs:r,libzip:d,readOnly:!0}),r=>`Failed to open the cache entry for ${a.structUtils.prettyLocator(t.project.configuration,e)}: ${r}`),s.ppath),releaseFs:()=>{null!==c&&c.discardAndClose()},prefixPath:a.structUtils.getIdentVendorPath(e),localPath:this.getLocalPath(e,t),checksum:o}}async fetchPrebuild(e,t){const{packageIdent:r}=u.parseSpec(e.reference),n=await u.getElectronVersion(t.project),i=await u.getNativeModule(t.project,r,e);if(null===i)throw new a.ReportError(a.MessageName.UNNAMED,"Could not find the native module that had a prebuild attempt");if(null===i.version)throw new a.ReportError(a.MessageName.UNNAMED,"Could not find the native module version that had a prebuild attempt");const o={abi:n?u.getElectronABI(n):process.versions.modules,runtime:n?"electron":"node"},c=await u.getUrlOfPrebuild(i,t,o);let d;try{d=await t.fetcher.fetch(a.structUtils.makeLocator(a.structUtils.makeIdent("prebuilds",`${a.structUtils.slugifyIdent(i)}-v${i.version}-${process.platform}-${process.arch}-${o.runtime}-${o.abi}`),c),t)}catch(e){throw t.report.reportInfo(a.MessageName.UNNAMED,`Error fetching ${c}`),e}const p={cancel:!1};let f=null,g="";if(await a.miscUtils.releaseAfterUseAsync(async()=>{await u.walk(d.packageFs,".",async(e,t)=>{f=await e.readFilePromise(t),g=t,p.cancel=!0},p)},d.releaseFs),null===f)throw new a.ReportError(a.MessageName.UNNAMED,`Was unable to find node file in prebuild package for "${a.structUtils.stringifyIdent(i)}"`);const b=await s.xfs.mktempPromise(),m=s.ppath.join(b,"prebuilt.zip"),h=a.structUtils.getIdentVendorPath(e),w=await l.getLibzipPromise(),y=new s.ZipFS(m,{libzip:w,create:!0});await y.mkdirpPromise(h);const v=new s.CwdFS(h,{baseFs:y});await v.writeJsonPromise("package.json",{name:a.structUtils.slugifyLocator(e),main:"./index.js"});const P=`// Automatically generated bindings file\n// Bindings taken from ${g}\n\nconst staticRequire = require("./bindings.node");\nmodule.exports = (fileLookingFor) => {\n  return staticRequire;\n};\n    `;return await v.writeFilePromise("index.js",P),await v.writeFilePromise("bindings.node",f),y}}},function(t,r){t.exports=e("@yarnpkg/libzip")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.walk=t.getUrlOfPrebuild=t.getElectronABI=t.gitRepositoryToGithubLink=t.getPrebuildConfiguration=t.parseSpec=t.getNativeModule=t.getElectronVersion=void 0;const n=r(0),i=r(1),o=r(7),a=r(8);function s(e,t){const r=t.get("prebuildScopes").get(e);return void 0!==r?r:null}function l(e){var t=/github\.com\/([^\/]+)\/([^\/\.]+)\.git/.exec(e);return t?`https://github.com/${t[1]}/${t[2]}`:null}function u(e,t,r){const n=r.project.configuration,i=`@${e.scope}`,o=(e.scope?s(i,n):null)||n;return o.get(t)?o.get(t):n.get(t)}t.getElectronVersion=async e=>{for(const t of e.storedPackages.values())if("electron"===t.name)return t.version;return null},t.getNativeModule=async(e,t,r)=>{for(const r of e.storedPackages.values())if(r.name===t.name&&r.scope===t.scope)return r;return null},t.parseSpec=function(e){const t=e.substring(e.indexOf("builtin<prebuild/")+17,e.length-1);return{packageIdent:n.structUtils.parseIdent(t)}},t.getPrebuildConfiguration=s,t.gitRepositoryToGithubLink=l,t.getElectronABI=function(e){return a.getAbi(e,"electron")},t.getUrlOfPrebuild=async function(e,t,r){const i=n.structUtils.stringifyIdent(e).replace(/^@\w+\//,""),a=e.version,s=r.abi,c=r.runtime,d=process.platform,p=process.arch,f=process.env.LIBC||"",g=u(e,"prebuildTagPrefix",t),b=`${i}-v${a}-${c}-v${s}-${d}${f}-${p}.tar.gz`,m=u(e,"prebuildHostMirrorUrl",t);if(m){return function(e,t){for(const[r,n]of Object.entries(t))e=e.replace(new RegExp(`{${r}}`,"g"),n);return e}(u(e,"prebuildHostMirrorTemplate",t),{mirror_url:m,name:i,version:a,abi:s,runtime:c,platform:d,arch:p,libc:f,tag_prefix:g,scope:e.scope||"",scopeWithAt:e.scope?`@${e.scope}`:"",scopeWithAtAndSlash:e.scope?`@${e.scope}/`:"",scopeWithSlash:e.scope?`${e.scope}/`:""})}return`${await async function(e,t){var r;const i=await o.npmHttpUtils.get(o.npmHttpUtils.getIdentUrl(e),{configuration:t.project.configuration,ident:e,json:!0});if(!Object.prototype.hasOwnProperty.call(i,"versions"))throw new n.ReportError(n.MessageName.REMOTE_INVALID,'Registry returned invalid data for - missing "versions" field');if(!Object.prototype.hasOwnProperty.call(i.versions,e.version))throw new n.ReportError(n.MessageName.REMOTE_NOT_FOUND,`Registry failed to return reference "${e.version}"`);const a=null===(r=i.versions[e.version].repository)||void 0===r?void 0:r.url;if(!a)throw new n.ReportError(n.MessageName.UNNAMED,`Unable to find repository information for "${n.structUtils.stringifyIdent(e)}"`);const s=l(a);if(!s)throw new n.ReportError(n.MessageName.UNNAMED,`Unable to find GitHub URL for "${n.structUtils.stringifyIdent(e)}"`);return s}(e,t)}/releases/download/${g}${a}/${b}`},t.walk=async(e,r,n,o)=>{if(o.cancel)return;const a=await e.readdirPromise(r);await Promise.all(a.map(async a=>{if(o.cancel)return;const s=i.ppath.join(r,a),l=await e.statPromise(s);l.isDirectory()?await t.walk(e,s,n,o):l.isFile()&&await n(e,s)}))}},function(t,r){t.exports=e("@yarnpkg/plugin-npm")},function(e,t,r){var n=r(9);function i(e,t){null==t&&(t=u);var r=t.filter((function(t){return t.runtime===e})).slice(-1)[0],i="electron"===e?"minor":"major";return n.inc(r.target,i)}var o=[{runtime:"node",target:"5.0.0",abi:"47",lts:!1},{runtime:"node",target:"6.0.0",abi:"48",lts:!1},{runtime:"node",target:"7.0.0",abi:"51",lts:!1},{runtime:"node",target:"8.0.0",abi:"57",lts:!1},{runtime:"node",target:"9.0.0",abi:"59",lts:!1},{runtime:"node",target:"10.0.0",abi:"64",lts:new Date(2018,10,1)<new Date&&new Date<new Date(2020,4,31)},{runtime:"node",target:"11.0.0",abi:"67",lts:!1},{runtime:"node",target:"12.0.0",abi:"72",lts:new Date(2019,9,21)<new Date&&new Date<new Date(2020,9,31)},{runtime:"node",target:"13.0.0",abi:"79",lts:!1},{runtime:"node",target:"14.0.0",abi:"83",lts:!1},{runtime:"electron",target:"0.36.0",abi:"47",lts:!1},{runtime:"electron",target:"1.1.0",abi:"48",lts:!1},{runtime:"electron",target:"1.3.0",abi:"49",lts:!1},{runtime:"electron",target:"1.4.0",abi:"50",lts:!1},{runtime:"electron",target:"1.5.0",abi:"51",lts:!1},{runtime:"electron",target:"1.6.0",abi:"53",lts:!1},{runtime:"electron",target:"1.7.0",abi:"54",lts:!1},{runtime:"electron",target:"1.8.0",abi:"57",lts:!1},{runtime:"electron",target:"2.0.0",abi:"57",lts:!1},{runtime:"electron",target:"3.0.0",abi:"64",lts:!1},{runtime:"electron",target:"4.0.0",abi:"64",lts:!1},{runtime:"electron",target:"4.0.4",abi:"69",lts:!1},{runtime:"electron",target:"5.0.0",abi:"70",lts:!1},{runtime:"electron",target:"6.0.0",abi:"73",lts:!1},{runtime:"electron",target:"7.0.0",abi:"75",lts:!1},{runtime:"electron",target:"8.0.0",abi:"76",lts:!1},{runtime:"electron",target:"9.0.0",abi:"80",lts:!1}],a=[{runtime:"node-webkit",target:"0.13.0",abi:"47",lts:!1},{runtime:"node-webkit",target:"0.15.0",abi:"48",lts:!1},{runtime:"node-webkit",target:"0.18.3",abi:"51",lts:!1},{runtime:"node-webkit",target:"0.23.0",abi:"57",lts:!1},{runtime:"node-webkit",target:"0.26.5",abi:"59",lts:!1}],s=[{runtime:"node",target:"0.2.0",abi:"1",lts:!1},{runtime:"node",target:"0.9.1",abi:"0x000A",lts:!1},{runtime:"node",target:"0.9.9",abi:"0x000B",lts:!1},{runtime:"node",target:"0.10.4",abi:"11",lts:!1},{runtime:"node",target:"0.11.0",abi:"0x000C",lts:!1},{runtime:"node",target:"0.11.8",abi:"13",lts:!1},{runtime:"node",target:"0.11.11",abi:"14",lts:!1},{runtime:"node",target:"1.0.0",abi:"42",lts:!1},{runtime:"node",target:"1.1.0",abi:"43",lts:!1},{runtime:"node",target:"2.0.0",abi:"44",lts:!1},{runtime:"node",target:"3.0.0",abi:"45",lts:!1},{runtime:"node",target:"4.0.0",abi:"46",lts:!1},{runtime:"electron",target:"0.30.0",abi:"44",lts:!1},{runtime:"electron",target:"0.31.0",abi:"45",lts:!1},{runtime:"electron",target:"0.33.0",abi:"46",lts:!1}],l=[{runtime:"electron",target:"10.0.0-beta.1",abi:"82",lts:!1}],u=s.concat(o).concat(a).concat(l);t.getAbi=function(e,t){if(e===String(Number(e)))return e;if(e&&(e=e.replace(/^v/,"")),t||(t="node"),"node"===t){if(!e)return process.versions.modules;if(e===process.versions.node)return process.versions.modules}for(var r,o=0;o<u.length;o++){var a=u[o];if(a.runtime===t){if(!n.lte(a.target,e))break;r=a.abi}}if(r&&n.lt(e,i(t)))return r;throw new Error("Could not detect abi for version "+e+" and runtime "+t+'.  Updating "node-abi" might help solve this issue if it is a new release of '+t)},t.getTarget=function(e,t){if(e&&e!==String(Number(e)))return e;if(t||(t="node"),"node"===t&&!e)return process.versions.node;var r=u.filter((function(r){return r.abi===e&&r.runtime===t})).map((function(e){return e.target}));if(r.length)return r[0];throw new Error("Could not detect target for abi "+e+" and runtime "+t)},t.deprecatedTargets=s,t.supportedTargets=o,t.additionalTargets=a,t.futureTargets=l,t.allTargets=u,t._getNextTarget=i},function(t,r){t.exports=e("semver")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PrebuildResolver=void 0;const n=r(0);t.PrebuildResolver=class{supportsDescriptor(e,t){return!!e.range.startsWith("prebuild:")}supportsLocator(e,t){return!!e.reference.startsWith("prebuild:")}shouldPersistResolution(e,t){return!1}bindDescriptor(e,t,r){return e}getResolutionDependencies(e,t){return[]}async getCandidates(e,t,r){if(!r.fetchOptions)throw new Error("Assertion failed: This resolver cannot be used unless a fetcher is configured");return[n.structUtils.makeLocator(n.structUtils.parseIdent("bindings"),e.range)]}async resolve(e,t){return{...e,version:"*",languageName:t.project.configuration.get("defaultLanguageName"),linkType:n.LinkType.HARD,dependencies:new Map,peerDependencies:new Map,dependenciesMeta:new Map,peerDependenciesMeta:new Map,bin:new Map}}}}])}};